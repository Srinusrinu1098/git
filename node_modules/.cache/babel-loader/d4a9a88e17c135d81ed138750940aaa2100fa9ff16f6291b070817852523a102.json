{"ast":null,"code":"var _jsxFileName = \"E:\\\\TaskManager\\\\myapp\\\\src\\\\Components\\\\TaskList\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { TaskContext } from \"../../TaskContext\";\nimport './TaskList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    tasks,\n    updateTask,\n    deleteTask,\n    saveTasksToLocalStorage\n  } = useContext(TaskContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), \" - \", task.status, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Due: \", task.dueDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateTask({\n              ...task,\n              status: \"Completed\"\n            }),\n            children: \"Mark as Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveTasksToLocalStorage,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bas1Y9BGV73bAmaFzjILvuaB77c=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","TaskContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","tasks","updateTask","deleteTask","saveTasksToLocalStorage","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","title","status","description","dueDate","onClick","id","_c","$RefreshReg$"],"sources":["E:/TaskManager/myapp/src/Components/TaskList/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { TaskContext } from \"../../TaskContext\";\r\nimport './TaskList.css';\r\n\r\n\r\nconst TaskList = () => {\r\n  const { tasks, updateTask, deleteTask ,saveTasksToLocalStorage} = useContext(TaskContext);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task List</h2>\r\n      {tasks.length === 0 ? (\r\n        <p>No tasks available</p>\r\n      ) : (\r\n        <>\r\n        <ul>\r\n          {tasks.map((task) => (\r\n            <li key={task.id}>\r\n              <strong>{task.title}</strong> - {task.status}\r\n              <p>{task.description}</p>\r\n              <p>Due: {task.dueDate}</p>\r\n              <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n              <button onClick={() => updateTask({ ...task, status: \"Completed\" })}>\r\n                Mark as Completed\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button onClick ={saveTasksToLocalStorage}>save</button>\r\n        </>\r\n      )}\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGxB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAuB,CAAC,GAAGX,UAAU,CAACC,WAAW,CAAC;EAEzF,oBACEE,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBR,KAAK,CAACS,MAAM,KAAK,CAAC,gBACjBd,OAAA;MAAAS,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzBb,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACAT,OAAA;QAAAS,QAAA,EACGJ,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdhB,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAASO,IAAI,CAACC;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,OAAG,EAACG,IAAI,CAACE,MAAM,eAC5ClB,OAAA;YAAAS,QAAA,EAAIO,IAAI,CAACG;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBb,OAAA;YAAAS,QAAA,GAAG,OAAK,EAACO,IAAI,CAACI,OAAO;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1Bb,OAAA;YAAQqB,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACS,IAAI,CAACM,EAAE,CAAE;YAAAb,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3Db,OAAA;YAAQqB,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC;cAAE,GAAGU,IAAI;cAAEE,MAAM,EAAE;YAAY,CAAC,CAAE;YAAAT,QAAA,EAAC;UAErE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAPFG,IAAI,CAACM,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLb,OAAA;QAAQqB,OAAO,EAAGb,uBAAwB;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACtD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAEV,CAAC;AAACT,EAAA,CA9BID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}