{"ast":null,"code":"var _jsxFileName = \"E:\\\\TaskManager\\\\myapp\\\\src\\\\Components\\\\TaskForm\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { TaskContext } from \"./TaskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const {\n    addTask\n  } = useContext(TaskContext);\n  const [form, setForm] = useState({\n    title: \"\",\n    description: \"\",\n    dueDate: \"\",\n    status: \"Pending\"\n  });\n  const handleInputChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newTask = {\n      ...form,\n      id: Date.now()\n    }; // Add a unique ID\n    addTask(newTask);\n    setForm({\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      status: \"Pending\"\n    }); // Reset the form\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: form.title,\n      onChange: handleInputChange,\n      placeholder: \"Task Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      value: form.description,\n      onChange: handleInputChange,\n      placeholder: \"Task Description\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      value: form.dueDate,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      value: form.status,\n      onChange: handleInputChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"In Progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"ofLMi7mRo+a2fTuoeTrQYhZaSL8=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useContext","TaskContext","jsxDEV","_jsxDEV","TaskForm","_s","addTask","form","setForm","title","description","dueDate","status","handleInputChange","e","target","name","value","handleSubmit","preventDefault","newTask","id","Date","now","onSubmit","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/TaskManager/myapp/src/Components/TaskForm/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { TaskContext } from \"./TaskContext\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask } = useContext(TaskContext);\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    dueDate: \"\",\r\n    status: \"Pending\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTask = { ...form, id: Date.now() }; // Add a unique ID\r\n    addTask(newTask);\r\n    setForm({ title: \"\", description: \"\", dueDate: \"\", status: \"Pending\" }); // Reset the form\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        value={form.title}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Task Title\"\r\n        required\r\n      />\r\n      <textarea\r\n        name=\"description\"\r\n        value={form.description}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Task Description\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        name=\"dueDate\"\r\n        value={form.dueDate}\r\n        onChange={handleInputChange}\r\n        required\r\n      />\r\n      <select\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleInputChange}\r\n      >\r\n        <option value=\"Pending\">Pending</option>\r\n        <option value=\"In Progress\">In Progress</option>\r\n        <option value=\"Completed\">Completed</option>\r\n      </select>\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}